'use strict'; (self.webpackChunkv2 = self.webpackChunkv2 || []).push([[214], { 7214: function (t, e, n) { n.r(e), n.d(e, { default: function () { return p } }); const a = function () { const t = this; const e = t._self._c; return e('div', { attrs: { id: 'container' } }, [e('div', { attrs: { id: 'map' } }), e('el-form', { staticClass: 'navigation' }, [e('el-form-item', { staticClass: 'navigation-1st' }, [e('el-input', { staticClass: 'input-1st', attrs: { type: 'text', id: 'start', placeholder: '请输入起点' }, model: { value: t.start, callback: function (e) { t.start = e }, expression: 'start' } }), e('br'), e('el-input', { staticClass: 'input-2st', attrs: { type: 'text', id: 'end', placeholder: '请输入终点' }, model: { value: t.end, callback: function (e) { t.end = e }, expression: 'end' } }), e('br'), e('el-button', { staticClass: 'navigation-2nd', attrs: { type: 'button' }, on: { click: function (e) { return t.navigate() } } }, [t._v('驾车')]), e('el-button', { attrs: { type: 'button' }, on: { click: function (e) { return t.navigate2() } } }, [t._v('公交')])], 1)], 1), e('el-button', { staticClass: 'user', attrs: { size: 'mini', type: 'info', icon: 'el-icon-user', circle: '' }, on: { click: t.toMy } }), e('el-button', { staticClass: 'location', attrs: { size: 'mini', icon: 'el-icon-location-outline', type: 'primary', circle: '' }, on: { click: function (e) { return t.getCurrentPosition() } } })], 1) }; const o = []; const i = (n(7658), { name: 'Map', data () { return { start: '', end: '', map: null, geocoder: null, center: { lng: 0, lat: 0 }, model: { lng: '', lat: '', address: '' } } }, methods: { navigate () { const t = new BMap.Map('map'); t.enableScrollWheelZoom(!0); const e = this.start; const n = this.end; const a = new BMap.DrivingRoute(t, { renderOptions: { map: t, autoViewport: !0 } }); a.search(e, n) }, navigate2 () { const t = new BMap.Map('map'); t.enableScrollWheelZoom(!0); const e = this.start; const n = this.end; const a = new BMap.TransitRoute(t, { renderOptions: { map: t, autoViewport: !0 } }); a.search(e, n) }, navigate3 () { const t = new BMap.Map('map'); t.enableScrollWheelZoom(!0); const e = this.start; const n = this.end; const a = new BMap.RidingRoute(t, { renderOptions: { map: t, autoViewport: !0 } }); a.search(e, n) }, navigate4 () { const t = new BMap.Map('map'); t.enableScrollWheelZoom(!0); const e = this.start; const n = this.end; const a = new BMap.WalkingRoute(t, { renderOptions: { map: t, autoViewport: !0 } }); a.search(e, n) }, getCurrentPosition () { const t = new BMap.Geolocation(); t.getCurrentPosition(e => { if (t.getStatus() === BMAP_STATUS_SUCCESS) { const t = new BMap.Map('map'); const n = new BMap.Point(e.point.lng, e.point.lat); t.centerAndZoom(n, 15), t.enableScrollWheelZoom(!0) } else alert('定位失败，请检查您的网络连接和定位权限设置！') }) }, toMy () { this.$router.push({ path: '/my' }) } }, mounted () { this.map = new BMap.Map('map'); const t = new BMap.Point(116.404, 39.915); this.map.centerAndZoom(t, 15), this.map.enableScrollWheelZoom(!0); const e = this; this.map.addEventListener('click', function (t) { console.log('点击位置经纬度：' + t.point.lng + ',' + t.point.lat), e.center.lng = t.point.lng, e.center.lat = t.point.lat, e.map.clearOverlays(); const n = new BMap.Point(e.center.lng, e.center.lat); const a = new BMap.Geocoder(); a.getLocation(n, function (t, a) { e.map.clearOverlays(), e.map.addControl(new BMap.NavigationControl()); const o = new BMap.Marker(n); e.map.addOverlay(o); const i = t.address; console.log('所处地址', i) }) }) } }); const l = i; const r = n(1001); const s = (0, r.Z)(l, a, o, !1, null, 'd2363c56', null); var p = s.exports } }])
// # sourceMappingURL=214.162ff5fa.js.map
